// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("TRAVELER") // Can be "ADMIN", "OPERATOR", or "TRAVELER"
  accounts      Account[]
  sessions      Session[]
  tourBookings  TourBooking[]
  operatedTours Tour[]    // For operators
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Tour {
  id            String      @id @default(cuid())
  name          String
  description   String
  coverImage    String
  difficultyLevel String
  climate       String
  operator      User        @relation(fields: [operatorId], references: [id])
  operatorId    String
  tourDates     TourDate[]
  bookings      TourBooking[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model TourDate {
  id            String       @id @default(cuid())
  startDate     DateTime
  endDate       DateTime
  price         Float
  availableSeats Int
  tour          Tour         @relation(fields: [tourId], references: [id])
  tourId        String
  bookings      TourBooking[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model TourBooking {
  id            String    @id @default(cuid())
  tourDate      TourDate  @relation(fields: [tourDateId], references: [id])
  tourDateId    String
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  tour          Tour      @relation(fields: [tourId], references: [id])
  tourId        String
  bookedSeats   Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

